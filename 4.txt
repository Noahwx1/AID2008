前情回顾

1. 文件

   分类 :  文本   二进制

   字节串 : 一段数据的二进制内容

     encode()   字符串--> 字节串
     decode()   字节串--> 字符串

2. 文件的读写

   open --> read/write --> close

   r  w  a   +   b

   read:  read()  readline()  readlines()  for
   write: write()  writelines()

   with ... as ..

3. 细节原理

   * 缓冲区 : 减少和磁盘的交互次数,提高读写效率
             flush()

   * 文件偏移量:  tell()  seek()

练习1: 使用input输入一个目录位置,删除该
目录下所有大小小于1kb的普通文件

练习2:

* 匹配所有以大写字母开头的单词

In [37]: re.findall('[A-Z]+[a-z]*',"Hi,Tom How ar
    ...: e you,I am OK")
Out[37]: ['Hi', 'Tom', 'How', 'I', 'OK']

* 匹配一个整数数字 整数包含正数和负数
  1  15  -67  -3

In [37]: re.findall('[A-Z]+[a-z]*',"Hi,Tom How ar
    ...: e you,I am OK")
Out[37]: ['Hi', 'Tom', 'How', 'I', 'OK']

* 匹配国内的手机号码
In [42]: re.findall('1[3-9][0-9]{9}',"13846295731
    ...: ")
Out[42]: ['13846295731']

* 匹配qq号码  6--11

In [45]: re.findall('[1-9][0-9]{5,10}',"552453194
    ...: ")
Out[45]: ['552453194']

* 匹配大写字母开头的单词或者正整数字
  I  Hello   CBD   iPython  28  k12

In [67]: re.findall(r'\b[A-Z]\w*\b|\b\d+\b',"I  H
    ...: ello   CBD   iPython  28  k12")
Out[67]: ['I', 'Hello', 'CBD', '28']

* 匹配数字   12  -22  2.45  3.14  -4.5
In [69]: re.findall(r'-?\d+\.?\d*',"12  -22 2.45
    ...:  3.14  -4.5")
Out[69]: ['12', '-22', '2.45', '3.14', '-4.5']

* 匹配出$150         日薪:$150
In [71]: re.findall(r'\$\d+',"日薪:$150")
Out[71]: ['$150']

* 在一段文字中匹配如下图书名字和书名号

  《红楼梦--黛玉之死》  《Python从入门到疯狂》
  《别走，2008》

In [88]: re.findall(r'《.+?》',"《红楼梦--黛玉之
    ...: 死》  《Python从入门到疯狂》《别走，2008
    ...: 》")
Out[88]: ['《红楼梦--黛玉之死》', '《Python从入门到疯狂》', '《别走，2008》']

* 匹配一下 IP地址
  192.168.1.3  每部分 0-255

In [96]:  re.search(r'(\d{1,3}\.){3}\d{1,3}',"192
    ...: .168.1.5").group()
Out[96]: '192.168.1.5'

* 匹配身份证号 18位
In [99]: re.search(r'\d{17}(\d|x)',"1101801999030
    ...: 2105x").group()
Out[99]: '11018019990302105x'

正则表达式模板： https://tool.oschina.net/regex/


作业 :
    1. 编写一个程序,输入一个接口名称,得到
    该接口运行状况描述中的address 地址
    address is 10f3.114b.978e

    文件特点 : 1. 每段之间有一个空行
              2.每段是一个接口运行状态说明
                其中第一个单词是接口名称

    提示: 根据输入的端口名称确定段落
          在对应段落中进行目标获取

